import UtilCommon from './UtilCommon'
import UtilDevice from './UtilDevice'

class UtilUser {
    constructor(props) {
        this.userInfo = null
    }

    async init() {
        await this.isLogin()
        return Promise.resolve()
    }

    async setUserInfo(userInfo) {
        this.userInfo = userInfo
        return this.userInfo
    }

    async getUserInfo() {
        if (this.isInvalid()) {
            await this.init()
        }
        return this.userInfo
    }

    async getUserId() {
        if (this.isInvalid()) {
            await this.init()
        }
        return this.userInfo.userId
    }

    async getUserToken() {
        if (this.isInvalid()) {
            await this.init()
        }
        return this.userInfo.token
    }

    isInvalid() {
        return (!this.userInfo || !this.userInfo.userId || !this.userInfo.token)
    }
}

let instance;

export default (() => {
    if (!instance) {
        instance = new UtilUser()
        // await instance.init()
    }
    return instance
})()
