import UtilCommon from './UtilCommon'
import ProjectConfig from '../../project.config'

class UtilDevice {
    constructor(props) {
        this.ua = ((navigator || {}).userAgent || '').toLowerCase()
    }

    /**
     * @desc 判断是否是在app中
     * @memberof UtilDevice
     * @returns {boolean}
     */
    isApp() {
        return (UtilCommon.urlQuery('agent') === ProjectConfig.vendor) || (!!(navigator.userAgent.indexOf(ProjectConfig.vendor) > -1))
    }

    /**
     * @description 判断是否是ios
     * @returns {boolean}
     * @memberof UtilDevice
     */
    isIOS() {
        const isInIOS = !!this.ua.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/i); // ios终端
        return !!isInIOS;

        // Vue.js的判断方法
        // var inBrowser = typeof window !== 'undefined';
        // var UA = inBrowser && window.navigator.userAgent.toLowerCase();
        // var isIE = UA && /msie|trident/.test(UA);
        // var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
        // var isEdge = UA && UA.indexOf('edge/') > 0;
        // var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
        // var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
        // var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
    }

    isIpX() {
        let type = false;
        if (typeof window !== "undefined") {
            const app = this.isApp();
            if (app) {
                type = /isiphonex/.test(navigator.userAgent.toLowerCase())
            }
            if (app && !type) {
                const clientHeight = document.documentElement.clientHeight || window.pageYOffset || document.body.clientHeight;
                if (clientHeight > 800 && clientHeight < 1000) {
                    type = true;
                }
            }
        }
        return type;
    }

    /**
     *
     * @description 判断是否是android
     * @returns {boolean}
     * @memberof UtilDevice
     */
    isAndroid() {
        const isInAndroid = !!(this.ua.indexOf('Android') > -1 || this.ua.indexOf('Linux') > -1) // android终端或者uc浏览器
        return !!isInAndroid
    }

    /**
     * @desc 判断是否是微信h5
     * @returns {boolean}
     * @memberof UtilDevice
     */
    isWechat() {
        const isInWechat = !!this.ua.match(/micromessenger/i)
        return isInWechat
    }

    /**
     * @description 判断是否是微信小程序
     * @returns {boolean}
     * @memberof UtilDevice
     */
    isWxMini() {
        return !!(window && window.__wxjs_environment === 'miniprogram')
    }
}

export default new UtilDevice()
