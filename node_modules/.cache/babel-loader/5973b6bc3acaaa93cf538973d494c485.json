{"ast":null,"code":"/**\n * @description 全局时间订阅 - 发布\n * @export instance\n * @class UtilEmitter\n */\nlet instance;\nlet count = 0;\n\nclass UtilEmitter {\n  constructor() {\n    this.subscribes = new Map();\n  }\n\n  addListener(key, fn) {\n    const trace = ++count;\n\n    if (!this.subscribes.has(key)) {\n      this.subscribes.set(key, {});\n    }\n\n    const uniqueEmitter = this.subscribes.get(key);\n    uniqueEmitter[trace] = fn;\n    this.subscribes.set(key, uniqueEmitter);\n    return trace;\n  }\n\n  removeListener(id) {\n    const keyArray = [...this.subscribes.entries()];\n    let key = null;\n\n    for (let i = 0; i < keyArray.length; i++) {\n      if (Object.prototype.toString.call(keyArray[i][1][id]) !== \"[object Undefined]\") {\n        key = keyArray[i][0];\n      }\n    }\n\n    if (!!key) {\n      const uniqueEmitter = { ...this.subscribes.get(key)\n      };\n      delete uniqueEmitter[id];\n      this.subscribes.set(key, uniqueEmitter);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  emit() {\n    const arg = arguments;\n    const key = [].shift.call(arg);\n    const uniqueEmitter = this.subscribes.get(key) || {};\n    const uniqueEmitterArray = Object.values(uniqueEmitter);\n    if (!uniqueEmitterArray || uniqueEmitterArray.length <= 0) return false;\n\n    for (var i = 0, len = uniqueEmitterArray.length; i < len; i++) {\n      if (uniqueEmitterArray[i]) {\n        // console.log('- - - - start - - - qiujieqiujie');\n        // console.log(uniqueEmitterArray[i]);\n        // console.log('- - - - end - - - qiujieqiujie');\n        uniqueEmitterArray[i].apply(this, arg);\n      }\n    }\n  }\n\n}\n\nexport default (() => {\n  if (!instance) instance = new UtilEmitter();\n  return instance;\n})();","map":{"version":3,"sources":["/Users/guolongfei/Documents/Project2/PublicUse/node_modules/npmglf/lib/utils/UtilEmitter.js"],"names":["instance","count","UtilEmitter","constructor","subscribes","Map","addListener","key","fn","trace","has","set","uniqueEmitter","get","removeListener","id","keyArray","entries","i","length","Object","prototype","toString","call","emit","arg","arguments","shift","uniqueEmitterArray","values","len","apply"],"mappings":"AAAA;;;;;AAKA,IAAIA,QAAJ;AACA,IAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AACH;;AAEDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,EAAN,EAAU;AACjB,UAAMC,KAAK,GAAG,EAAER,KAAhB;;AAEA,QAAI,CAAC,KAAKG,UAAL,CAAgBM,GAAhB,CAAoBH,GAApB,CAAL,EAA+B;AAC3B,WAAKH,UAAL,CAAgBO,GAAhB,CAAoBJ,GAApB,EAAyB,EAAzB;AACH;;AAED,UAAMK,aAAa,GAAG,KAAKR,UAAL,CAAgBS,GAAhB,CAAoBN,GAApB,CAAtB;AACAK,IAAAA,aAAa,CAACH,KAAD,CAAb,GAAuBD,EAAvB;AACA,SAAKJ,UAAL,CAAgBO,GAAhB,CAAoBJ,GAApB,EAAyBK,aAAzB;AAEA,WAAOH,KAAP;AACH;;AAEDK,EAAAA,cAAc,CAACC,EAAD,EAAK;AACf,UAAMC,QAAQ,GAAG,CAAC,GAAG,KAAKZ,UAAL,CAAgBa,OAAhB,EAAJ,CAAjB;AACA,QAAIV,GAAG,GAAG,IAAV;;AACA,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAIE,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,QAAQ,CAACE,CAAD,CAAR,CAAY,CAAZ,EAAeH,EAAf,CAA/B,MAAuD,oBAA3D,EAAiF;AAC7ER,QAAAA,GAAG,GAAGS,QAAQ,CAACE,CAAD,CAAR,CAAY,CAAZ,CAAN;AACH;AACJ;;AACD,QAAI,CAAC,CAACX,GAAN,EAAW;AACP,YAAMK,aAAa,GAAG,EAAC,GAAG,KAAKR,UAAL,CAAgBS,GAAhB,CAAoBN,GAApB;AAAJ,OAAtB;AACA,aAAOK,aAAa,CAACG,EAAD,CAApB;AACA,WAAKX,UAAL,CAAgBO,GAAhB,CAAoBJ,GAApB,EAAyBK,aAAzB;AACA,aAAO,IAAP;AACH,KALD,MAKO;AACH,aAAO,KAAP;AACH;AACJ;;AAEDY,EAAAA,IAAI,GAAG;AACH,UAAMC,GAAG,GAAGC,SAAZ;AACA,UAAMnB,GAAG,GAAG,GAAGoB,KAAH,CAASJ,IAAT,CAAcE,GAAd,CAAZ;AACA,UAAMb,aAAa,GAAG,KAAKR,UAAL,CAAgBS,GAAhB,CAAoBN,GAApB,KAA4B,EAAlD;AACA,UAAMqB,kBAAkB,GAAGR,MAAM,CAACS,MAAP,CAAcjB,aAAd,CAA3B;AAEA,QAAI,CAACgB,kBAAD,IAAuBA,kBAAkB,CAACT,MAAnB,IAA6B,CAAxD,EAA2D,OAAO,KAAP;;AAE3D,SAAK,IAAID,CAAC,GAAG,CAAR,EAAWY,GAAG,GAAGF,kBAAkB,CAACT,MAAzC,EAAiDD,CAAC,GAAGY,GAArD,EAA0DZ,CAAC,EAA3D,EAA+D;AAC3D,UAAIU,kBAAkB,CAACV,CAAD,CAAtB,EAA2B;AACvB;AACA;AACA;AACAU,QAAAA,kBAAkB,CAACV,CAAD,CAAlB,CAAsBa,KAAtB,CAA4B,IAA5B,EAAkCN,GAAlC;AACH;AACJ;AACJ;;AArDa;;AAwDlB,eAAe,CAAC,MAAM;AAClB,MAAI,CAACzB,QAAL,EAAeA,QAAQ,GAAG,IAAIE,WAAJ,EAAX;AACf,SAAOF,QAAP;AACH,CAHc,GAAf","sourcesContent":["/**\n * @description 全局时间订阅 - 发布\n * @export instance\n * @class UtilEmitter\n */\nlet instance\nlet count = 0\n\nclass UtilEmitter {\n    constructor() {\n        this.subscribes = new Map()\n    }\n\n    addListener(key, fn) {\n        const trace = ++count\n\n        if (!this.subscribes.has(key)) {\n            this.subscribes.set(key, {})\n        }\n\n        const uniqueEmitter = this.subscribes.get(key)\n        uniqueEmitter[trace] = fn\n        this.subscribes.set(key, uniqueEmitter)\n\n        return trace\n    }\n\n    removeListener(id) {\n        const keyArray = [...this.subscribes.entries()]\n        let key = null\n        for (let i = 0; i < keyArray.length; i++) {\n            if (Object.prototype.toString.call(keyArray[i][1][id]) !== \"[object Undefined]\") {\n                key = keyArray[i][0]\n            }\n        }\n        if (!!key) {\n            const uniqueEmitter = {...this.subscribes.get(key)}\n            delete uniqueEmitter[id]\n            this.subscribes.set(key, uniqueEmitter)\n            return true\n        } else {\n            return false\n        }\n    }\n\n    emit() {\n        const arg = arguments;\n        const key = [].shift.call(arg);\n        const uniqueEmitter = this.subscribes.get(key) || {};\n        const uniqueEmitterArray = Object.values(uniqueEmitter);\n\n        if (!uniqueEmitterArray || uniqueEmitterArray.length <= 0) return false;\n\n        for (var i = 0, len = uniqueEmitterArray.length; i < len; i++) {\n            if (uniqueEmitterArray[i]) {\n                // console.log('- - - - start - - - qiujieqiujie');\n                // console.log(uniqueEmitterArray[i]);\n                // console.log('- - - - end - - - qiujieqiujie');\n                uniqueEmitterArray[i].apply(this, arg);\n            }\n        }\n    }\n}\n\nexport default (() => {\n    if (!instance) instance = new UtilEmitter()\n    return instance\n})()\n"]},"metadata":{},"sourceType":"module"}