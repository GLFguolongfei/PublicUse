{"ast":null,"code":"import * as bridge from '../bridge';\nimport UtilCommon from './UtilCommon';\nimport ProjectConfig from '../../project.config';\n\nclass UtilDevice {\n  constructor(props) {\n    this.ua = ((navigator || {}).userAgent || '').toLowerCase();\n  }\n  /**\n   * @desc 判断是否是在app中\n   * @memberof UtilDevice\n   * @returns {boolean}\n   */\n\n\n  isApp() {\n    return UtilCommon.urlQuery('agent') === ProjectConfig.vendor || !!(navigator.userAgent.indexOf(ProjectConfig.vendor) > -1);\n  }\n  /**\n   * @description 判断是否是ios\n   * @returns {boolean}\n   * @memberof UtilDevice\n   */\n\n\n  isIOS() {\n    const isInIOS = !!this.ua.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/i); // ios终端\n\n    return !!isInIOS; // Vue.js的判断方法\n    // var inBrowser = typeof window !== 'undefined';\n    // var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n    // var isIE = UA && /msie|trident/.test(UA);\n    // var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n    // var isEdge = UA && UA.indexOf('edge/') > 0;\n    // var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\n    // var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\n    // var isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n  }\n\n  isIpX() {\n    let type = false;\n\n    if (typeof window !== \"undefined\") {\n      const app = this.isApp();\n\n      if (app) {\n        type = /isiphonex/.test(navigator.userAgent.toLowerCase());\n      }\n\n      if (app && !type) {\n        const clientHeight = document.documentElement.clientHeight || window.pageYOffset || document.body.clientHeight;\n\n        if (clientHeight > 800 && clientHeight < 1000) {\n          type = true;\n        }\n      }\n    }\n\n    return type;\n  }\n  /**\n   *\n   * @description 判断是否是android\n   * @returns {boolean}\n   * @memberof UtilDevice\n   */\n\n\n  isAndroid() {\n    const isInAndroid = !!(this.ua.indexOf('Android') > -1 || this.ua.indexOf('Linux') > -1); // android终端或者uc浏览器\n\n    return !!isInAndroid;\n  }\n  /**\n   * @desc 判断是否是微信h5\n   * @returns {boolean}\n   * @memberof UtilDevice\n   */\n\n\n  isWechat() {\n    const isInWechat = !!this.ua.match(/micromessenger/i);\n    return isInWechat;\n  }\n  /**\n   * @description 判断是否是微信小程序\n   * @returns {boolean}\n   * @memberof UtilDevice\n   */\n\n\n  isWxMini() {\n    return !!(window && window.__wxjs_environment === 'miniprogram');\n  }\n  /**\n   * @description 获取定位\n   * @returns {object}\n   * @memberof UtilDevice\n   */\n\n\n  getLocation() {\n    return new Promise(resolve => {\n      bridge.appGetLocation((res = {}) => {\n        resolve(res);\n      });\n    });\n  }\n  /**\n   * @description 获取已选的机场信息\n   * @returns {object}\n   * @memberof UtilDevice\n   */\n\n\n  getAirportInfo() {\n    return new Promise(resolve => {\n      bridge.userAirportInfo((res = {}) => {\n        resolve(res);\n      });\n    });\n  }\n  /**\n   * @description 设置信号栏文字颜色\n   * @param {boolean} [isDark=true] 黑色\n   * @returns {number} 成功与否\n   * @memberof UtilDevice\n   */\n\n\n  setSignalBarColor(isDark = !!1) {\n    return new Promise(resolve => {\n      bridge.appCheckSignalBarTextColor(isDark ? 'black' : 'white', (res = {}) => {\n        resolve(res);\n      });\n    });\n  }\n\n}\n\nexport default new UtilDevice();","map":{"version":3,"sources":["/Users/guolongfei/Documents/Project2/PublicUse/node_modules/npmglf/lib/utils/UtilDevice.js"],"names":["bridge","UtilCommon","ProjectConfig","UtilDevice","constructor","props","ua","navigator","userAgent","toLowerCase","isApp","urlQuery","vendor","indexOf","isIOS","isInIOS","match","isIpX","type","window","app","test","clientHeight","document","documentElement","pageYOffset","body","isAndroid","isInAndroid","isWechat","isInWechat","isWxMini","__wxjs_environment","getLocation","Promise","resolve","appGetLocation","res","getAirportInfo","userAirportInfo","setSignalBarColor","isDark","appCheckSignalBarTextColor"],"mappings":"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","sourcesContent":["import * as bridge from '../bridge'\nimport UtilCommon from './UtilCommon'\nimport ProjectConfig from '../../project.config'\n\nclass UtilDevice {\n    constructor(props) {\n        this.ua = ((navigator || {}).userAgent || '').toLowerCase()\n    }\n\n    /**\n     * @desc 判断是否是在app中\n     * @memberof UtilDevice\n     * @returns {boolean}\n     */\n    isApp() {\n        return (UtilCommon.urlQuery('agent') === ProjectConfig.vendor) || (!!(navigator.userAgent.indexOf(ProjectConfig.vendor) > -1))\n    }\n\n    /**\n     * @description 判断是否是ios\n     * @returns {boolean}\n     * @memberof UtilDevice\n     */\n    isIOS() {\n        const isInIOS = !!this.ua.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/i); // ios终端\n        return !!isInIOS;\n\n        // Vue.js的判断方法\n        // var inBrowser = typeof window !== 'undefined';\n        // var UA = inBrowser && window.navigator.userAgent.toLowerCase();\n        // var isIE = UA && /msie|trident/.test(UA);\n        // var isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n        // var isEdge = UA && UA.indexOf('edge/') > 0;\n        // var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\n        // var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\n        // var isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n    }\n\n    isIpX() {\n        let type = false;\n        if (typeof window !== \"undefined\") {\n            const app = this.isApp();\n            if (app) {\n                type = /isiphonex/.test(navigator.userAgent.toLowerCase())\n            }\n            if (app && !type) {\n                const clientHeight = document.documentElement.clientHeight || window.pageYOffset || document.body.clientHeight;\n                if (clientHeight > 800 && clientHeight < 1000) {\n                    type = true;\n                }\n            }\n        }\n        return type;\n    }\n\n    /**\n     *\n     * @description 判断是否是android\n     * @returns {boolean}\n     * @memberof UtilDevice\n     */\n    isAndroid() {\n        const isInAndroid = !!(this.ua.indexOf('Android') > -1 || this.ua.indexOf('Linux') > -1) // android终端或者uc浏览器\n        return !!isInAndroid\n    }\n\n    /**\n     * @desc 判断是否是微信h5\n     * @returns {boolean}\n     * @memberof UtilDevice\n     */\n    isWechat() {\n        const isInWechat = !!this.ua.match(/micromessenger/i)\n        return isInWechat\n    }\n\n    /**\n     * @description 判断是否是微信小程序\n     * @returns {boolean}\n     * @memberof UtilDevice\n     */\n    isWxMini() {\n        return !!(window && window.__wxjs_environment === 'miniprogram')\n    }\n\n    /**\n     * @description 获取定位\n     * @returns {object}\n     * @memberof UtilDevice\n     */\n    getLocation() {\n        return new Promise(resolve => {\n            bridge.appGetLocation((res = {}) => {\n                resolve(res)\n            })\n        })\n    }\n\n    /**\n     * @description 获取已选的机场信息\n     * @returns {object}\n     * @memberof UtilDevice\n     */\n    getAirportInfo() {\n        return new Promise(resolve => {\n            bridge.userAirportInfo((res = {}) => {\n                resolve(res)\n            })\n        })\n    }\n\n    /**\n     * @description 设置信号栏文字颜色\n     * @param {boolean} [isDark=true] 黑色\n     * @returns {number} 成功与否\n     * @memberof UtilDevice\n     */\n    setSignalBarColor(isDark = !!1) {\n        return new Promise(resolve => {\n            bridge.appCheckSignalBarTextColor(isDark ? 'black' : 'white', (res = {}) => {\n                resolve(res)\n            })\n        })\n    }\n}\n\nexport default new UtilDevice()"]},"metadata":{},"sourceType":"module"}